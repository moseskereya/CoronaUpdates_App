{"version":3,"sources":["Img/Moses.jpeg","Components/Nav.js","Components/Data.js","Components/Head.js","Components/Home.js","Components/Skills.js","Search.js","Components/Countries.js","Components/CountryInfo.js","Footer.js","Components/Maps.js","Components/Developer.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","state","className","to","Component","Data","props","componentDidMount","axios","get","then","res","setState","datas","data","console","log","catch","error","this","cases","todayCases","deaths","todayDeaths","recovered","active","critical","Head","Main","time","Date","toDateString","left","Search","Country","countries","results","map","items","pathname","country","CountryInfo","title","location","response","single","Flags","countryInfo","dataList","Fragment","continent","src","flag","alt","lat","long","Footer","years","getFullYear","Maps","stores","displayMarkers","store","index","key","id","position","lng","onClick","google","zoom","style","mapStyles","initialCenter","GoogleApiWrapper","apiKey","width","height","Skills","sites","href","news","Developer","App","path","exact","component","Home","Countries","About","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fa81e4b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Moses.875c9af6.jpeg\";","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nclass Nav extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <nav>\r\n                <div className=\"title\">\r\n                    App\r\n                </div>\r\n                <ul>\r\n                    <Link className=\"links\" to='/'>\r\n                      <li>Home</li>\r\n                    </Link>\r\n                    <Link className=\"links\" to = \"/About\">\r\n                    <li>About</li>\r\n                    </Link>\r\n                    <Link className=\"links\" to= \"/Countries\">\r\n                      <li>Live Updates</li>\r\n                   </Link>\r\n                   <Link className=\"links\" to= \"/Maps\">\r\n                      <li>Map</li>\r\n                   </Link>\r\n                </ul>\r\n            </nav>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Nav;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport axios from \"axios\"\r\nclass Data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            datas: []\r\n         }\r\n    }\r\n    componentDidMount = () =>{\r\n        axios.get('https://corona.lmao.ninja/v2/all')\r\n        .then(res =>{\r\n            this.setState({datas:res.data})\r\n            console.log(this.state)\r\n        })\r\n        .catch( error =>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"detail\">\r\n                    <div>\r\n                    <h4>Reported Cases and Deaths by Country, Territory, or Conveyance</h4>\r\n                    <p>The coronavirus COVID-19 is affecting 210 countries and territories around the world and 2 international conveyances. The day is reset after midnight GMT+0. The list of countries and territories and their continental regional classification is based on the United Nations Geoscheme. Sources are provided under \"Latest Updates\".</p>\r\n                    \r\n                         <button className=\"btn\">\r\n                             <Link className=\"links\" to=\"/Countries\">\r\n                                 Read More\r\n                             </Link>\r\n                         </button>\r\n                   \r\n                </div>\r\n                </div>\r\n            <div className=\"data\">\r\n                <span className=\"spans\"> \r\n                <h3>\r\n                   TotalCases\r\n                </h3>\r\n                <p>\r\n                  {this.state.datas.cases}\r\n                </p>\r\n                  </span>\r\n                <span className=\"spans\">\r\n                   <h3>TodayCases</h3> \r\n                   <p>\r\n                     {this.state.datas.todayCases}\r\n                   </p>\r\n                 </span>\r\n                <span className=\"spans\">\r\n                    <h3>\r\n                        Deaths\r\n                    </h3>\r\n                    <p>\r\n                      {this.state.datas.deaths}\r\n                    </p>\r\n                    </span>\r\n                <span className=\"spans\"> \r\n                <h3>\r\n                    TodayDeaths \r\n                </h3> \r\n                <p>\r\n                  {this.state.datas.todayDeaths}\r\n                </p>\r\n            </span>\r\n            <span className=\"spans\"> \r\n                 <h3>Recovered</h3> \r\n                 <p>\r\n                     {this.state.datas.recovered}\r\n                 </p>\r\n                </span>\r\n                <span className=\"spans\">\r\n                    <h3>ActiveCases </h3> \r\n                    <p>\r\n                       {this.state.datas.active}\r\n                    </p>\r\n                    </span>\r\n                <span className=\"spans\">\r\n                     <h3>Critical</h3> \r\n                     <p>\r\n                       {this.state.datas.critical}\r\n                     </p>\r\n                </span>\r\n            </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Data;","import React, { Component } from 'react';\r\nclass Head extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"head\">\r\n                <h1> PLEASE STAY HOME SAFE, SAVE LIFE.</h1>\r\n                <h2>\r\n                    This are real data from corona virus updates\r\n                </h2>\r\n                <p>Below are the results from all around the world</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Head;","import React, { Component } from 'react';\r\nimport Data from './Data'\r\nimport Head from './Head'\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        const time = new Date()\r\n        return ( \r\n            <>\r\n            <div className=\"hero\">\r\n                 <div className=\"hero-clipped\">\r\n                <div className=\"hero-textbox\">\r\n                    <h5 className=\"sub-heading\">Corona Virus updates</h5>\r\n                    <span className=\"span\">\r\n                     <p>New Updates</p>\r\n                       <p className=\"time\">\r\n                     {time.toDateString()}\r\n                    </p>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <Head/>\r\n             <Data/>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Main;","import React, { Component } from 'react';\r\nimport Slide from 'react-reveal/Slide';\r\nclass Head extends Component {\r\n    state = {  }\r\n    render() { \r\n        const time = new Date()\r\n        return ( \r\n            <div className=\"hero\">\r\n            <div className=\"hero-clipped\">\r\n                <div className=\"hero-textbox\">\r\n                <Slide left>\r\n                    <h1 className=\"main-heading\">Online Updates</h1>\r\n               </Slide>\r\n                    <p className=\"time\">\r\n                        {time.toDateString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default Head;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"search\">\r\n                  <h2>List of Countries with all categories details </h2>\r\n                  <Link to = \"/Maps\">\r\n                     <h4>View by Map</h4>\r\n                  </Link>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Search;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Show from \"./Skills\"\r\nimport Data from '../Search'\r\nclass Country extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { countries: [] }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        axios.get('https://corona.lmao.ninja/v2/countries')\r\n        .then(res =>{\r\n            this.setState({countries:res.data})\r\n            console.log(this.state)\r\n        })\r\n        .catch( error =>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const results = this.state.countries\r\n        return ( \r\n            <div>\r\n                <Show/>\r\n                <div>\r\n                    <Data/>\r\n                </div>\r\n                 \r\n                \r\n            <table className=\"table\">\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Cases</th>\r\n                    <th>todayCases</th>\r\n                    <th>Deaths</th>\r\n                    <th>TodayDeaths</th>\r\n                    <th>Recovered</th>\r\n                    <th>Active</th>\r\n                    <th>Critical</th>\r\n                </tr>\r\n                {results.map(items  =>{\r\n                    return(\r\n                        <tr>\r\n                            <td>\r\n                             <Link  to = {\r\n                                 {pathname \r\n                                    :`/CountryInfo/${items.country}`, \r\n                                 state:{items}}}>\r\n                                 {items.country}\r\n                                </Link>\r\n                              </td>\r\n                            <td className=\"red\">{items.cases}</td>\r\n                            <td>{items.todayCases}</td>\r\n                            <td className='red'>{items.deaths}</td>\r\n                            <td>{items.todayDeaths}</td>\r\n                            <td>{items.recovered}</td>\r\n                            <td>{items.active}</td>\r\n                            <td className=\"red\">{items.critical}</td>\r\n                        </tr>\r\n          \r\n                    )\r\n                })}\r\n            </table>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Country;","import React, { Component } from 'react';\r\nimport axios from  'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport Show from './Skills'\r\nclass CountryInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n        single : [],\r\n        Flags: ''\r\n     }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        const title  = this.props.location.state.items.country;\r\n        axios.get(`https://corona.lmao.ninja/v2/countries/${title}`)\r\n        .then(response => {\r\n            this.setState({single:response.data})\r\n            this.setState({Flags:response.data.countryInfo})\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() { \r\n        const dataList = this.state.single\r\n        return ( \r\n            <React.Fragment>\r\n                <Show/>\r\n            <div>\r\n        <h2>Country : {dataList.country}</h2>\r\n           <h3>Continent : {dataList.continent}</h3>\r\n              <img src={this.state.Flags.flag} alt=\"\"/>\r\n                 <h3>Country Location </h3>\r\n                  Latitude {this.state.Flags.lat}, \r\n                  longitude {this.state.Flags.long}\r\n                <table className=\"table\">\r\n                <tr>\r\n                    <th>Cases</th>\r\n                    <th>todayCases</th>\r\n                    <th>Deaths</th>\r\n                    <th>TodayDeaths</th>\r\n                    <th>Recovered</th>\r\n                    <th>Active</th>\r\n                    <th>Critical</th>\r\n                </tr>\r\n                    <tr>\r\n                        <td>{dataList.cases}</td>\r\n                        <td>{dataList.todayCases}</td>\r\n                        <td>{dataList.deaths}</td>\r\n                        <td>{dataList.todayDeaths}</td>\r\n                        <td>{dataList.recovered}</td>\r\n                        <td>{dataList.active}</td>\r\n                        <td>{dataList.critical}</td>\r\n                    </tr>\r\n            </table>\r\n            </div>\r\n            <div className=\"button-container\">\r\n               <button className=\"btn\">\r\n                   <Link className=\"links\" to =\"/Countries\">\r\n                        Go back to list\r\n                   </Link>\r\n                   </button>\r\n               <button className=\"btn\">\r\n                   <Link className=\"links\" to =\"/Maps\">\r\n                        View By Maps\r\n                   </Link>\r\n                   </button>\r\n            </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default CountryInfo\r\n\r\n ","import React, { Component } from 'react';\r\nclass Footer extends Component {\r\n    state = {  }\r\n    render() { \r\n        const years = new Date()\r\n        return ( \r\n            <div className='footer'>\r\n                <div>\r\n                    App &copy; {years.getFullYear()}\r\n                </div>\r\n                <div>\r\n                    Home |\r\n                    About | \r\n                    Updates\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\nimport axios from 'axios'\r\nimport Footer from '../Footer'\r\nclass Maps extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            stores : []\r\n         }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        axios.get('https://corona.lmao.ninja/v2/countries')\r\n        .then(res =>{\r\n            console.log(res.data)\r\n            this.setState({stores: res.data})\r\n        })\r\n        .catch( error =>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n    displayMarkers = () => {\r\n        return this.state.stores.map((store, index) => {\r\n          return <Marker key={index} id={index} position={{\r\n           lat: store.countryInfo.lat,\r\n           lng: store.countryInfo.long\r\n         }}\r\n         onClick={() => console.log(\"You clicked me!\")} />\r\n        })\r\n      }\r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n            <Map\r\n            google={this.props.google}\r\n            zoom={4}\r\n            style={mapStyles}\r\n            initialCenter={{ lat: -6, lng: 35}}\r\n          >\r\n            {this.displayMarkers()}\r\n            \r\n          </Map>\r\n          <Footer/>\r\n          </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBiYs6RzugOo9vR_UuwWP-DSRhggdkdcsQ'\r\n  })(Maps);\r\n\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '100%',\r\n  };","import React, { Component } from 'react';\r\nimport sites from \"../Img/Moses.jpeg\"\r\nimport Footer from '../Footer'\r\nclass Skills extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <>\r\n            <div className=\"skills\">\r\n                <div className=\"dev-content1\">\r\n                    <img src={sites} className=\"img1\" alt=\"\"/>\r\n                </div>\r\n            <div className='dev-content2'>\r\n                <h3>About my website</h3>\r\n            <p>I built this website using <a href=\"https://corona.lmao.ninja/\">coronalmao api </a>\r\n            just to let people updated over the world, Mostly about Corona Virus which is whipping our humanity. Please stay home , motivated, safe and happy. This will end. It is not going to last forever. \r\n           </p> \r\n            <button className=\"btn\">\r\n                <a className=\"links\" href=\"https://corona.lmao.ninja\">\r\n                    Get Api Info\r\n                </a>\r\n            </button>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n        </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Skills;","import React, { Component } from 'react';\r\nimport Developer  from \"./Developer\";\r\nimport Show from \"./Skills\"\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { news : [] }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n              <Show/>\r\n                 <h1 className=\"h1\">About this Website</h1>\r\n              <Developer/>\r\n             </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Search;","import React from 'react';\nimport Nav from \"./Components/Nav\"\nimport { HashRouter as Router , Switch, Route } from 'react-router-dom'\nimport Home from \"./Components/Home\"\nimport  Countries from \"./Components/Countries\"\nimport CountryInfo from \"./Components/CountryInfo\"\nimport Maps from './Components/Maps'\nimport './App.css';\nimport About from './Components/About';\n\nfunction App() {\n  return (\n<Router>\n    <div className=\"App\">\n        <Nav/>\n        <Switch>\n                <Route path=\"/\" exact component={Home}  />\n                <Route path=\"/Countries\" component={Countries} />\n                <Route path=\"/About\" component={About}/>\n                <Route path=\"/Maps\" component={Maps}/>\n                <Route path='/CountryInfo/:id'\n                    component=   {CountryInfo}/>\n            </Switch>\n     </div>\n</Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}